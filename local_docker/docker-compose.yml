version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: redis
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  cassandra:
    image: cassandra
    container_name: cassandra
    restart: always
    environment:
      CASSANDRA_CLUSTER_NAME: "TestCluster"
      CASSANDRA_NUM_TOKENS: 256
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "my_zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
  # Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
  
  mongodb_exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: mongodb_exporter
    ports:
      - "9216:9216"
    command:
      - '--mongodb.uri=mongodb://mongodb:27017'
  

  redis_exporter:
    image: oliver006/redis_exporter
    container_name: redis_exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://:mypassword@redis:6379



  kafka_exporter:
    image: danielqsj/kafka-exporter
    container_name: kafka_exporter
    ports:
      - "9308:9308"
    command:
      - '--kafka.server=kafka:9092'
    depends_on:
      - kafka
      
  # Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - redis_exporter
      # - postgres_exporter
      - kafka_exporter
      - mongodb_exporter
      # - cassandra_exporter
  
    
volumes:
  grafana-data:
   driver: local
   driver_opts:
     type: none
     device: /Users/shivshankarkeshari/Documents/docker_volume/grafana-data
     o: bind
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /Users/shivshankarkeshari/Documents/docker_volume/postgres-data
      o: bind

  redis_data:
    driver: local
    driver_opts:
      type: none
      device: /Users/shivshankarkeshari/Documents/docker_volume/redis-data
      o: bind

  mongodb_data:
    driver: local
    driver_opts:
      type: none
      device: /Users/shivshankarkeshari/Documents/docker_volume/mongodb-data
      o: bind


  cassandra_data:
    driver: local
    driver_opts:
      type: none
      device: /Users/shivshankarkeshari/Documents/docker_volume/cassandra-data
      o: bind


  kafka_data:
    driver: local
    driver_opts:
      type: none
      device: /Users/shivshankarkeshari/Documents/docker_volume/kafka-data
      o: bind


networks:
  my_custom_network:
    driver: bridge